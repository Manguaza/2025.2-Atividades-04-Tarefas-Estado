Contexto do exerc√≠cio

Tr√™s tarefas foram dadas, cada uma representando um programa simples em C, executado em um sistema operacional com controle de estados de tarefas.

Premissas:
Item	Descri√ß√£o	Tempo (ticks)
E/S (entrada/sa√≠da)	printf, fprintf, fopen, fclose	2
Instru√ß√£o while (count < 5)	Execu√ß√£o de CPU	1
Troca de contexto (SO)	Tempo de troca entre tarefas	1
Escalonamento	Tempo do escalonador	0
Mudan√ßa de estado	Tempo de mudan√ßa (pr, su, ex...)	0
Estados poss√≠veis
C√≥digo	Significado
no	novo
pr	pronto
ex	executando
su	suspenso (aguardando E/S)
fi	finalizado
üß© C√≥digos das tarefas
Tarefa 1 (t1)
FILE * fp = fopen("exemplo", "w+");
int count = 1;
while (count < 5) {
  fprintf(fp, "%d ", count);
  printf("%d\n", count);
  count++;
}
fclose(fp);

Tarefa 2 (t2)
FILE * fp = fopen("exemplo", "w+");
int count = 1;
while (count < 5) {
  fprintf(fp, "%d ", count);
  count++;
}
fclose(fp);

Tarefa 3 (t3)
int count = 1;
while (count < 5) {
  count++;
}

‚öôÔ∏è Atividade 1 ‚Äî Quantum = 1 tick
üî∏ Tabela de execu√ß√£o (fatia de tempo = 1 tick)
Tick	SO	t1	t2	t3	Fila de pr
01	ex	--	--	--	--
02	ex	no	--	--	--
03	ex	pr	no	--	t1
04	ex	--	pr	no	t1, t2
05	ex t1	--	--	pr	t2, t3
06	--	ex linha 1	--	--	t2, t3
07	ex t2	su 1	--	--	t2, t3
08	--	su 2	ex linha 1	--	t3
09	ex t3	pr	su 1	--	t1
10	--	--	su 2	ex linha 1	t1
11	ex t1	ex linha 2	su 2	su 1	t3
12	--	su 3	su 2	ex linha 2	t1
13	ex t3	su 3	su 2	ex linha 3	t1
14	--	su 2	su 1	fi	t1
15	ex t1	ex linha 3	su 2	fi	t2
16	--	su 1	ex linha 2	fi	t1
17	ex t2	su 2	su 3	fi	t1
18	--	su 1	fi	fi	t1
19	ex t1	ex linha 4	fi	fi	--
20	--	fi	fi	fi	--
üîç Observa√ß√µes:

O quantum de 1 tick causa muitas trocas de contexto.

As tarefas com E/S (t1 e t2) ficam frequentemente suspensas.

t3, mesmo sendo curta, √© interrompida v√°rias vezes, o que aumenta o tempo total de conclus√£o.

‚öôÔ∏è Atividade 2 ‚Äî Quantum = 10 ticks
üî∏ Tabela de execu√ß√£o (fatia de tempo = 10 ticks)
Tick	SO	t1	t2	t3	Fila de pr
01	ex	--	--	--	--
02	ex	no	--	--	--
03	ex	pr	no	--	t1
04	ex	--	pr	no	t1, t2
05	ex t1	--	--	pr	t2, t3
06	--	ex linha 1	--	--	t2, t3
07	ex t2	su 1	--	--	t2, t3
08	--	su 2	ex linha 1	--	t3
09	ex t3	pr	su 1	--	t1
10	--	--	su 2	ex linha 1	t1
11	ex t1	ex linha 2	su 2	su 1	t3
12	--	su 2	ex linha 1	su 1	t3
13	--	su 2	ex linha 2	su 1	t3
14	--	su 2	su 1	su 1	t3
15	ex t3	su 2	su 1	ex linha 1	--
16	--	su 2	su 1	ex linha 2	--
17	--	su 2	su 1	ex linha 3	--
18	--	su 2	su 1	ex linha 4	--
19	--	su 2	su 1	fi	--
20	ex t1	ex linha 3	su 2	fi	t2
üîç Observa√ß√µes:

Com quantum maior, o sistema realiza menos trocas de contexto.

t3 consegue executar completamente sem ser interrompida.

H√° menos overhead do SO e maior aproveitamento da CPU.

üß© Atividade 3 ‚Äî Avalia√ß√£o do comportamento de t3
Aspecto	Quantum = 1 tick	Quantum = 10 ticks
Tempo de CPU	Interrompido v√°rias vezes	Executa direto at√© o fim
Trocas de contexto	Muitas (a cada tick)	Poucas (quase nenhuma para t3)
Desempenho	Ruim ‚Äî overhead alto	√ìtimo ‚Äî execu√ß√£o cont√≠nua
Conclus√£o	t3 termina tarde, apesar de ser leve	t3 termina r√°pido, sem preemp√ß√£o
üß† Conclus√£o geral:

A tarefa t3, por n√£o realizar opera√ß√µes de E/S e exigir pouco tempo de CPU, √© favorecida por quantuns maiores.
Com fatia de tempo de 1 tick, o SO interrompe constantemente, gerando alto overhead e atrasando sua finaliza√ß√£o.
J√° com quantum de 10 ticks, a tarefa executa de forma cont√≠nua, finalizando rapidamente e reduzindo o custo de trocas de contexto.

